{"ast":null,"code":"var _jsxFileName = \"/home/ranjan/Desktop/reactproject/checkout-react/src/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './Checkout.module.css';\nimport { LoadingIcon } from './Icons';\nimport { getProducts } from './dataService'; // You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Once the <Checkout /> component is mounted, load the products using the getProducts function. Done\n// Once all the data is successfully loaded, hide the loading icon. Done\n// Render each product object as a <Product/> component, passing in the necessary props. Done\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n// You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Product = () => {\n  _s();\n\n  const [plus, setPlus] = useState(0);\n  const [mul, setMul] = useState(0); // const []\n\n  const [loading, setLoading] = useState(false);\n  const [product, setProduct] = useState([]);\n  useEffect(() => {\n    getProducts().then(response => {\n      setLoading(true);\n      setProduct(response);\n    }, err => {\n      setLoading(true);\n      console.log(err);\n    });\n  }, []);\n\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: product.map(data => {\n        const {\n          id,\n          name,\n          availableCount,\n          price,\n          orderedQuantity,\n          total\n        } = data;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: availableCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [orderedQuantity, \" \", plus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", total, \" \", plus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.actionButton,\n              onClick: () => setPlus(plus + 1) * setMul(price * p),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.actionButton,\n              onClick: () => {},\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false);\n  }\n};\n\n_s(Product, \"B8T1OIaQF3HfpZa1yRXvEhbE/dU=\");\n\n_c = Product;\n\nconst Checkout = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Electro World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"# Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(Product, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discount: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Checkout;\nexport default Checkout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"sources":["/home/ranjan/Desktop/reactproject/checkout-react/src/Checkout.js"],"names":["React","useState","useEffect","styles","LoadingIcon","getProducts","Product","plus","setPlus","mul","setMul","loading","setLoading","product","setProduct","then","response","err","console","log","map","data","id","name","availableCount","price","orderedQuantity","total","actionButton","p","Checkout","header","table"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styles from './Checkout.module.css';\nimport { LoadingIcon } from './Icons';\nimport { getProducts } from './dataService';\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function. Done\n// Once all the data is successfully loaded, hide the loading icon. Done\n// Render each product object as a <Product/> component, passing in the necessary props. Done\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n// You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\n\n\nconst Product = () => {\n  const [plus, setPlus] = useState(0)\n  const [mul, setMul] = useState(0)\n  // const []\n  const [loading, setLoading] = useState(false)\n  const [product, setProduct] = useState([])\n\n\n  useEffect(() => {\n    getProducts().then((response) => {\n      setLoading(true)\n      setProduct(response)\n    }, (err) => {\n      setLoading(true)\n      console.log(err)\n    }\n    )\n  }, [])\n\n  if (!loading) {\n    return (\n      <div>\n        <LoadingIcon />\n      </div>\n    )\n  } else {\n    return (\n      <>\n        {\n          product.map(data => {\n            const { id, name, availableCount, price, orderedQuantity, total } = data;\n\n            return (\n              <tr key={id}>\n                <td >{id}</td>\n                <td>{name}</td>\n                <td>{availableCount}</td>\n                <td>${price}</td>\n                <td>{orderedQuantity} {plus}</td>\n                <td>${total} {plus}</td>\n                <td>\n                  <button className={styles.actionButton} onClick={() => setPlus(plus + 1) * setMul(price  * p)}>+</button>\n                  <button className={styles.actionButton} onClick={() => {}}>-</button>\n                </td>\n              </tr>\n            )\n          })\n        }\n      </>\n    )\n  }\n}\n\n\nconst Checkout = () => {\n\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Electro World</h1>\n      </header>\n\n      <main>\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th># Available</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* Products should be rendered here */}\n            <Product />\n          </tbody>\n        </table>\n        <h2>Order summary</h2>\n        <p>Discount: $ </p>\n        <p>Total: $ </p>\n      </main>\n    </div>\n  );\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}